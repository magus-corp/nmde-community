#!/usr/bin/env python3
import os
import sys

# --- Venv Self-Execution ---
VENV_PYTHON = os.path.expanduser("~/.magustui/.venv/bin/python")
if sys.executable != VENV_PYTHON:
    if os.path.exists(VENV_PYTHON):
        os.execv(VENV_PYTHON, [VENV_PYTHON] + sys.argv)
    else:
        print(f"Error: MagusTUI virtual environment not found at {VENV_PYTHON}", file=sys.stderr)
        sys.exit(1)
# --- End Venv Self-Execution ---

import subprocess
from rich.console import Console
from rich.panel import Panel
from rich.theme import Theme

def run_command(command, console, description):
    """Runs a command and displays its progress."""
    console.print(Panel(description, style="info"))
    try:
        subprocess.run(command, check=True, capture_output=True, text=True)
    except subprocess.CalledProcessError as e:
        console.print(f"Error running command: {' '.join(command)}", style="error")
        console.print(e.stderr, style="error")
        # Don't exit on error, as some commands might fail gracefully
    except FileNotFoundError:
        console.print(f"Error: Command not found: {command[0]}", style="error")


def main():
    """
    A spell of illusion, to conjure a virtual monitor from the aether.
    This incantation will create a new virtual display and start an x11vnc server,
    allowing the Magus to peer into this newly created plane.
    """
    custom_theme = Theme({
        "info": "bold cyan",
        "success": "bold green",
        "warning": "bold yellow",
        "error": "bold red",
        "path": "blue"
    })
    console = Console(theme=custom_theme)

    run_command(["xrandr", "--addmode", "VIRTUAL1", "1920x1080"], console, "Adding VIRTUAL1 mode...")
    run_command(
        [
            "xrandr",
            "--output", "LVDS1", "--primary", "--mode", "1366x768", "--pos", "1920x0", "--rotate", "normal",
            "--output", "VGA1", "--mode", "1920x1080", "--pos", "0x0", "--rotate", "normal",
            "--output", "VIRTUAL1", "--mode", "1920x1080", "--pos", "3286x0", "--rotate", "normal"
        ],
        console, "Configuring monitors..."
    )
    run_command(["nitrogen", "--restore"], console, "Restoring wallpaper...")
    
    console.print(Panel("Starting x11vnc server...", style="info"))
    try:
        subprocess.Popen(["x11vnc", "-clip", "1920x1080+3286+0"], start_new_session=True)
        console.print("x11vnc server started in the background.", style="success")
    except FileNotFoundError:
        console.print("Error: 'x11vnc' command not found.", style="error")


if __name__ == "__main__":
    main()