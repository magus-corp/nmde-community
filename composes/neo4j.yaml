version: '3.8'
# networks:
#   neo4j-internal:

services:
  neo4j:
    # name: neo4j_server
    # Docker image to be used
    image: neo4j:5.14.0

    # Hostname
    # hostname: server1

    # Service-level network, which specifies the networks, from the list of the top-level networks (in this case only neo4j-internal), that the server will connect to.
    # Adds a network alias (used in neo4j.conf when configuring the discovery members)
    # networks:
    #   neo4j-internal:
    #     aliases:
    #       - neo4j-network

    # The ports that will be accessible from outside the container - HTTP (7474) and Bolt (7687).
    ports:
      - "7474:7474"
      - "7687:7687"

    # Uncomment the volumes to be mounted to make them accessible from outside the container.
    volumes:
      # - ~/apps_data/neo4j_config/neo4j.conf:/conf/neo4j.conf # This is the main configuration file.
      - ~/apps_data/neo4j_config/data:/data
      - ~/apps_data/neo4j_config/logs:/logs
      # - ~/apps_data/neo4j_config/conf:/conf
      - ~/apps_data/neo4j_config/import:/import
      #- ./metrics/server1:/metrics
      #- ./licenses/server1:/licenses
      #- ./ssl/server1:/ssl

    # Passes the following environment variables to the container
    environment:
      # NEO4J_AUTH, NEO4J_dbms_memory_pagecache_size, NEO4J_dbms_memory_heap_max__size, NEO4JLABS_PLUGINS
      # are expected in neo4j.env
      # Example:
      # - NEO4J_ACCEPT_LICENSE_AGREEMENT # If using Enterprise, set in .env
    env_file:
      - ./env_files/neo4j.env
      # - EXTENDED_CONF # If needed, manage via .env or directly
      # - NEO4J_EDITION # If needed, manage via .env or directly
      # - NEO4J_initial_server_mode__constraint=PRIMARY

    # Simple check testing whether the port 7474 is opened.
    # If so, the instance running inside the container is considered as "healthy".
    # This status can be checked using the "docker ps" command.
    # healthcheck:
      # test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1"]

    network_mode: host
